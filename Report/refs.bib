@misc{watrous2020parse,
    author = {Watrous, John},
    title = {Parse trees, ambiguity, and Chomsky normal form},
    year = {2020},
    howpublished = {https://cs.uwaterloo.ca/~watrous/ToC-notes/ToC-notes.08.pdf},
    note = {[Online; accessed 17-April-2024]}
}

@inproceedings{vasudevan2013detecting,
    abstract = {Ambiguous Context Free Grammars (CFGs) are problematic for programming languages, as they allow inputs to be parsed in more than one way. In this paper, we introduce a simple non-deterministic search-based approach to ambiguity detection which non-exhaustively explores a grammar in breadth for ambiguity. We also introduce two new techniques for generating random grammars --Boltzmann sampling and grammar mutation --allowing us to test ambiguity detection tools on much larger corpuses than previously possible. Our experiments show that our breadth-based approach to ambiguity detection performs as well as, and generally better, than extant tools.},
    address = {Cham},
    author = {Vasudevan, Naveneetha and Tratt, Laurence},
    booktitle = {Software Language Engineering},
    date = {2013//},
    date-added = {2024-04-17 12:14:56 +0200},
    date-modified = {2024-04-17 12:14:56 +0200},
    editor = {Erwig, Martin and Paige, Richard F. and Van Wyk, Eric},
    id = {10.1007/978-3-319-02654-1{\_}9},
    isbn = {978-3-319-02654-1},
    pages = {157--176},
    publisher = {Springer International Publishing},
    title = {Detecting Ambiguity in Programming Language Grammars},
    year = {2013}
}

@InProceedings{vasudevan2013operator,
    author={Afroozeh, Ali
and van den Brand, Mark
and Johnstone, Adrian
and Scott, Elizabeth
and Vinju, Jurgen},
    editor={Erwig, Martin
and Paige, Richard F.
and Van Wyk, Eric},
    title={Safe Specification of Operator Precedence Rules},
    booktitle={Software Language Engineering},
    year={2013},
    publisher={Springer International Publishing},
    address={Cham},
    pages={137--156},
    abstract={In this paper we present an approach to specifying operator precedence based on declarative disambiguation constructs and an implementation mechanism based on grammar rewriting. We identify a problem with existing generalized context-free parsing and disambiguation technology: generating a correct parser for a language such as OCaml using declarative precedence specification is not possible without resorting to some manual grammar transformation. Our approach provides a fully declarative solution to operator precedence specification for context-free grammars, is independent of any parsing technology, and is safe in that it guarantees that the language of the resulting grammar will be the same as the language of the specification grammar. We evaluate our new approach by specifying the precedence rules from the OCaml reference manual against the highly ambiguous reference grammar and validate the output of our generated parser.},
    isbn={978-3-319-02654-1}
}

@article{wharton1976resolution,
    abstract = {The use of context-free grammars to define the syntax of programming languages is complicated by the phenomenon of ambiguity. Ambiguity can be resolved by the specification of a unique canonical parse. A set of rules is given which defines a canonical bottom-up parse, and these rules are implemented in a left-to-right bottom-up parsing algorithm. A second set of rules is given which defines a canonical top-down parse, and these rules are similarly implemented in a left-to-right top-down parsing algorithm.},
    author = {Wharton, R.  M. },
    date = {1976/12/01},
    date-added = {2024-04-17 12:09:39 +0200},
    date-modified = {2024-04-17 12:09:39 +0200},
    doi = {10.1007/BF00268139},
    id = {Wharton1976},
    isbn = {1432-0525},
    journal = {Acta Informatica},
    number = {4},
    pages = {387--395},
    title = {Resolution of ambiguity in parsing},
    url = {https://doi.org/10.1007/BF00268139},
    volume = {6},
    year = {1976},
    bdsk-url-1 = {https://doi.org/10.1007/BF00268139}
}

@misc{parr2024definitive,
    author = {Parr, Terence},
    title = {The Definitive ANTLR Reference},
    year = {2024},
    howpublished = {https://theswissbay.ch/pdf/Gentoomen%20Library/Programming/Pragmatic%20Programmers/The%20Definitive%20ANTLR%20Reference.pdf},
    note = {[Online; accessed 12-June-2024]}
}

@InProceedings{kemp1974automata,
    author={Kemp, R.},
    editor={Loeckx, Jacques},
    title={Mehrdeutigkeiten Kontextfreier Grammatiken},
    booktitle={Automata, Languages and Programming},
    year={1974},
    publisher={Springer Berlin Heidelberg},
    address={Berlin, Heidelberg},
    pages={534--546},
    abstract={Es wird ein Kriterium angegeben, bei dessen Erf{\"u}lltsein eine kontextfreie Grammatik G mehrdeutig wird. F{\"u}r bestimmte Klassen kontextfreier, chomskyreduzierter Grammatiken ergeben sich daraus Absch{\"a}tzungen f{\"u}r die Wahrscheinlichkeit, da{\ss} eine solche gegebene Grammatik G mehrdeutig ist. Es ergibt sich, da{\ss} eine Grammatik desto eher mehrdeutig ist, je n{\"a}her die Anzahl der Zwischenregeln mit verschiedenen Quellen in ihrer Chomskynormalform in der Gr{\"o}{\ss}enordnung des zugeh{\"o}rigen Hilfsalphabetes liegt.},
    isbn={978-3-662-21545-6}
}

@article{thorup1994controlled,
    author = {Thorup, Mikkel},
    title = {Controlled Grammatic Ambiguity},
    year={1994},
    howpublished = {https://dl.acm.org/doi/pdf/10.1145/177492.177759},
    note = {[Online; accessed 17-April-2024]}
}

@article{abrahams1966association,
    author = {Abrahams, Paul W.},
    title = {A final solution to the Dangling else of ALGOL 60 and related languages},
    year = {1966},
    issue_date = {Sept. 1966},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {9},
    number = {9},
    issn = {0001-0782},
    url = {https://doi.org/10.1145/365813.365821},
    doi = {10.1145/365813.365821},
    abstract = {The dangling else problem consists of a class of potential ambiguities in ALGOL-like conditional statements whose basic form is “if B1 then if B2 then S1 else S2” where B1 and B2 are Boolean expressions and S1 and S2 are basic statements. The difficulty lies in whether to attach the else to the first if or to the second one. Existing solutions to the problem are either ambiguous or unnecessarily restrictive. Let S and S1 be statements. We define S to be closed if “S else S1” is not a statement, and to be open if “S else S1” is a statement. Thus an unconditional statement is a closed statement. Open and closed conditional statements are defined by syntax equations in such a way as to preserve openness and closure. In each case, an else must always be preceded by a closed statement. It is shown that the syntax equations are unambiguous, and that any change in the statement types required within the syntax equations would lead to either ambiguity or unnecessary restriction.},
    journal = {Commun. ACM},
    month = {sep},
    pages = {679–682},
    numpages = {4}
}

@book{hopcroft2006introduction,
    title     = {Introduction to Automata Theory, Languages, and Computation},
    author    = {Hopcroft, John E. and Motwani, Rajeev and Ullman, Jeffrey D.},
    year      = {2006},
    edition   = {3rd},
    publisher = {Addison-Wesley},
    address   = {Boston},
    isbn      = {978-0321455369}
}

@article{hans2014postsche,
    author = {Hans U. Simon},
    title = {Post’sches Korrespondenzproblem},
    year={2014/2015},
    howpublished = {https://www.ruhr-uni-bochum.de/lmi/lehre/materialien/ti/vorlesung-2014/kap2-3.pdf},
    note = {[Online; accessed 10-Juli-2024]}
}

@article{klaus2009cky,
    author = {Daniel Bruder, Lukas Giuliani},
    title = {Chartparsing & CKY Algorithmus},
    year={2009},
    howpublished = {https://www.cip.ifi.lmu.de/~bruder/programs/cky/pdf/Seminararbeit_Bruder_Giuliani_CKY_Parser.pdf},
    note = {[Online; accessed 10-Juli-2024]}
}

@article{apple2016script,
    author = {Apple Inc},
    title = {AppleScript Language Guide},
    year={2016},
    howpublished = {https://developer.apple.com/library/archive/documentation/AppleScript/Conceptual/AppleScriptLangGuide/introduction/ASLR_intro.html},
    note = {[Online; accessed 10-Juli-2024]}
}

@article{apple2024swift,
    author = {Apple Inc},
    title = {Swift},
    year={2024},
    howpublished = {https://www.swift.org/},
    note = {[Online; accessed 10-Juli-2024]}
}

@book{aho2006compilers,
    author = {Aho, Alfred V. and Lam, Monica S. and Sethi, Ravi and Ullman, Jeffrey D.},
    title = {Compilers: Principles, Techniques, and Tools (2nd Edition)},
    year = {2006},
    isbn = {0321486811},
    publisher = {Addison-Wesley Longman Publishing Co., Inc.},
    address = {USA}
}
@misc{watrous2020,
  author = {Watrous, John},
  title = {Parse trees, ambiguity, and Chomsky normal form},
  year = {2020},
  howpublished = {https://cs.uwaterloo.ca/~watrous/ToC-notes/ToC-notes.08.pdf},
  note = {[Online; accessed 17-April-2024]}
}

@inproceedings{softwarelanguage,
	abstract = {Ambiguous Context Free Grammars (CFGs) are problematic for programming languages, as they allow inputs to be parsed in more than one way. In this paper, we introduce a simple non-deterministic search-based approach to ambiguity detection which non-exhaustively explores a grammar in breadth for ambiguity. We also introduce two new techniques for generating random grammars --Boltzmann sampling and grammar mutation --allowing us to test ambiguity detection tools on much larger corpuses than previously possible. Our experiments show that our breadth-based approach to ambiguity detection performs as well as, and generally better, than extant tools.},
	address = {Cham},
	author = {Vasudevan, Naveneetha and Tratt, Laurence},
	booktitle = {Software Language Engineering},
	date = {2013//},
	date-added = {2024-04-17 12:14:56 +0200},
	date-modified = {2024-04-17 12:14:56 +0200},
	editor = {Erwig, Martin and Paige, Richard F. and Van Wyk, Eric},
	id = {10.1007/978-3-319-02654-1{\_}9},
	isbn = {978-3-319-02654-1},
	pages = {157--176},
	publisher = {Springer International Publishing},
	title = {Detecting Ambiguity in Programming Language Grammars},
	year = {2013}
}